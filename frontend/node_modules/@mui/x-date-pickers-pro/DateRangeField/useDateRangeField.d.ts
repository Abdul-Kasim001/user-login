import { FieldValueManager } from '@mui/x-date-pickers/internals';
import { DateRangeFieldSection, UseDateRangeFieldDefaultizedProps, UseDateRangeFieldProps } from './DateRangeField.interfaces';
import { DateRange } from '../internal/models';
import { DateRangeValidationError } from '../internal/hooks/validation/useDateRangeValidation';
export declare const dateRangeFieldValueManager: FieldValueManager<DateRange<any>, any, DateRangeFieldSection, DateRangeValidationError>;
export declare const useDefaultizedDateRangeFieldProps: <TInputDate, TDate, AdditionalProps extends {}>(props: UseDateRangeFieldProps<TInputDate, TDate>) => Omit<UseDateRangeFieldProps<TInputDate, TDate>, "disablePast" | "disableFuture" | "maxDate" | "minDate"> & Required<Pick<UseDateRangeFieldProps<TInputDate, TDate>, "disablePast" | "disableFuture" | "maxDate" | "minDate">> & AdditionalProps;
export declare const useDateRangeField: <TInputDate, TDate, TProps extends UseDateRangeFieldProps<TInputDate, TDate>>(inProps: TProps) => import("@mui/x-date-pickers/internals").UseFieldResponse<Omit<UseDateRangeFieldProps<TInputDate, TDate>, "disablePast" | "disableFuture" | "maxDate" | "minDate"> & Required<Pick<UseDateRangeFieldProps<TInputDate, TDate>, "disablePast" | "disableFuture" | "maxDate" | "minDate">> & TProps>;
